[build-system]
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vayuai"
dynamic = ["version"]
description = "Vayuvahan Technologies VayuAI team presents Vajra for SOTA object detection, instance segmentation, pose estimation, multi-object tracking and image classification"
readme = "README.md"
requires-python = ">=3.8"
license = { "text" = "AGPL-3.0" }
keywords = ["machine-learning", "deep-learning", "computer-vision", "object-detection", "AI", "ML", "DL", "Vajra", "YOLO", "YOLOv10", "YOLOv8", "SAM", "FastSAM"]
authors = [{name="Naman Balbir Singh Makkar"}]
maintainers = [{name="Naman Balbir Singh Makkar"}]
dependencies = [
    "matplotlib>=3.3.0",
    "opencv-python>=4.6.0",
    "pillow>=7.1.2",
    "pyyaml>=5.3.1",
    "requests>=2.23.0",
    "scipy>=1.4.1",
    "torch>=1.8.0",
    "torchvision>=0.9.0",
    "tqdm>=4.64.0", # progress bars
    "psutil", # system utilization
    "py-cpuinfo", # display CPU info
    "thop>=0.1.1", # FLOPs computation
    "pandas>=1.1.4",
    "seaborn>=0.11.0", # plotting
]

[project.optional-dependencies]
dev = [
    "ipython",
    "check-manifest",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "coverage[toml]",
    "mkdocs-material>=9.5.9",
    "mkdocstrings[python]",
    "mkdocs-jupyter", # for notebooks
    "mkdocs-redirects", # for 301 redirects
]
export = [
    "onnx>=1.12.0",
    "coremltools>=7.0; platform_system != 'Windows' and python_version <= '3.11'",
    "openvino>=2024.0.0",
    "tensorflow<=2.13.1; python_version <= '3.11'",
    "tensorflowjs>=3.9.0; python_version <= '3.11'",
]
explorer = [
    "lancedb",
    "duckdb<=0.9.2",
    "streamlit",
]

logging = [
    "comet",
    "tensorboard>=2.13.0",
    "dvclive>=2.12.0",
]

extra = [
    "ipython",
    "albumentations>=1.0.3",
    "pycocotools>=2.0.7",
]

[project.scripts]
vajra = "vajra.manager:manage"
vayuai = "vajra.manager:manage"
vayuvahan = "vajra.manager:manage"

[tool.setuptools]
packages = { find = { where = ["."], include = ["vajra", "vajra.*"] } }
package-data = { "vajra" = ["**/*.yaml"], "vajra.assets" = ["*.jpg"] }

[tool.setuptools.dynamic]
version = { attr = "vajra.__version__"}

[tool.pytest.ini_options]
addopts = "--doctest-modules --durations=30 --color=yes"
markers = [
    "slow: skip slow tests unless --slow is set"
]
norecursedirs = [".git", "dist", "build"]

[tool.coverage.run]
source = ["vajra/"]
data_file = "tests/.coverage"
omit = ["vajra/callbacks/*"]

[tool.isort]
line_length = 120
multi_line_output = 0

[tool.yapf]
based_on_style = "pep8"
spaces_before_comment = 2
column_limit = 120
coalesce_brackets = true
spaces_around_power_operator = true
space_between_ending_comma_and_closing_bracket = true
split_before_closing_bracket = false
split_before_first_argument = false

[tool.ruff]
line-length = 120

[tool.docformatter]
wrap-summaries = 120
wrap-descriptions = 120
in-place = true
pre-summary-newline = true
close-quotes-on-newline = true

[tool.codespell]
ignore-words-list = "crate,nd,ned,strack,dota,ane,segway,fo,gool,winn,commend,bloc,nam,afterall"
skip = '*.pt,*.pth,*.torchscript,*.onnx,*.tflite,*.pb,*.bin,*.param,*.mlmodel,*.engine,*.npy,*.data*,*.csv,*pnnx*,*venv*,*translat*,__pycache__*,*.ico,*.jpg,*.png,*.mp4,*.mov,/runs,/.git,./docs/??/*.md,./docs/mkdocs_??.yml'